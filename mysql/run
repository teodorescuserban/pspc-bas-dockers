#!/bin/bash
set -e

[ ${MYSQL_DIR} ]       || MYSQL_DIR=/srv/db
[ ${MYSQL_ROOT_PASS} ] || MYSQL_ROOT_PASS=rootpass
[ ${MYSQL_DB} ]        || MYSQL_DB=db
[ ${MYSQL_USER} ]      || MYSQL_USER=user
[ ${MYSQL_PASS} ]      || MYSQL_PASS=pass

args=""

# create MYSQL_DIR if not exists
if [ ! -d $MYSQL_DIR ]; then
    mkdir -p $MYSQL_DIR;
    chown -R mysql:mysql $MYSQL_DIR;
    chmod 700 $MYSQL_DIR;
fi

# init db if MYSQL_DIR is empty
if [ ! "$(ls -A $MYSQL_DIR)" ]; then
    mysql_install_db
    tempSqlFile='/tmp/mysql-first-time.sql'
    cat > "$tempSqlFile" <<-EOSQL
DELETE FROM mysql.user ;
CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASS}' ;
GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION ;
DROP DATABASE IF EXISTS test ;
EOSQL
    if [ "$MYSQL_DB" ]; then
        echo "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DB\` ;" >> "$tempSqlFile"
    fi
    if [ "$MYSQL_USER" -a "$MYSQL_PASS" ]; then
        echo "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASS' ;" >> "$tempSqlFile"
        if [ "$MYSQL_DB" ]; then
            echo "GRANT ALL ON \`$MYSQL_DB\`.* TO '$MYSQL_USER'@'%' ;" >> "$tempSqlFile"
        fi
    fi
    echo 'FLUSH PRIVILEGES ;' >> "$tempSqlFile"

    args="--init-file=$tempSqlFile"
else
    echo "Data dir ($MYSQL_DIR) not empty. Skipping mysql initialisation."
fi

chown -R mysql:mysql $MYSQL_DIR

exec mysqld $args
